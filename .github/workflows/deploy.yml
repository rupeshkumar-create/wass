name: Deploy WSA 2026 App

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: '18'

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run type check
      run: npm run type-check

    - name: Run linting
      run: npm run lint

    - name: Run tests
      run: npm run test
      env:
        # Test environment variables (no real secrets)
        HUBSPOT_TOKEN: test-token
        HUBSPOT_CONTACT_LINKEDIN_KEY: linkedin
        HUBSPOT_COMPANY_LINKEDIN_KEY: linkedin_company_page
        HUBSPOT_PIPELINE_ID: test-pipeline
        HUBSPOT_STAGE_SUBMITTED: test-submitted
        HUBSPOT_STAGE_APPROVED: test-approved
        HUBSPOT_STAGE_REJECTED: test-rejected
        HUBSPOT_SYNC_ENABLED: false

    - name: Build application
      run: npm run build
      env:
        # Build-time environment variables (no secrets exposed to client)
        NEXT_PUBLIC_APP_ENV: test

  deploy-staging:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    environment: staging
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build for staging
      run: npm run build
      env:
        # Staging environment variables from GitHub Secrets
        HUBSPOT_TOKEN: ${{ secrets.HUBSPOT_TOKEN_STAGING }}
        HUBSPOT_CONTACT_LINKEDIN_KEY: ${{ secrets.HUBSPOT_CONTACT_LINKEDIN_KEY }}
        HUBSPOT_COMPANY_LINKEDIN_KEY: ${{ secrets.HUBSPOT_COMPANY_LINKEDIN_KEY }}
        HUBSPOT_PIPELINE_ID: ${{ secrets.HUBSPOT_PIPELINE_ID_STAGING }}
        HUBSPOT_STAGE_SUBMITTED: ${{ secrets.HUBSPOT_STAGE_SUBMITTED }}
        HUBSPOT_STAGE_APPROVED: ${{ secrets.HUBSPOT_STAGE_APPROVED }}
        HUBSPOT_STAGE_REJECTED: ${{ secrets.HUBSPOT_STAGE_REJECTED }}
        HUBSPOT_SYNC_ENABLED: true
        NEXT_PUBLIC_APP_ENV: staging

    # Add your deployment steps here (Vercel, Netlify, etc.)
    - name: Deploy to staging
      run: echo "Deploy to staging environment"
      # Example for Vercel:
      # run: npx vercel --token ${{ secrets.VERCEL_TOKEN }} --prod

  deploy-production:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    environment: production
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build for production
      run: npm run build
      env:
        # Production environment variables from GitHub Secrets
        HUBSPOT_TOKEN: ${{ secrets.HUBSPOT_TOKEN_PRODUCTION }}
        HUBSPOT_CONTACT_LINKEDIN_KEY: ${{ secrets.HUBSPOT_CONTACT_LINKEDIN_KEY }}
        HUBSPOT_COMPANY_LINKEDIN_KEY: ${{ secrets.HUBSPOT_COMPANY_LINKEDIN_KEY }}
        HUBSPOT_PIPELINE_ID: ${{ secrets.HUBSPOT_PIPELINE_ID_PRODUCTION }}
        HUBSPOT_STAGE_SUBMITTED: ${{ secrets.HUBSPOT_STAGE_SUBMITTED }}
        HUBSPOT_STAGE_APPROVED: ${{ secrets.HUBSPOT_STAGE_APPROVED }}
        HUBSPOT_STAGE_REJECTED: ${{ secrets.HUBSPOT_STAGE_REJECTED }}
        HUBSPOT_SYNC_ENABLED: true
        NEXT_PUBLIC_APP_ENV: production

    # Add your deployment steps here
    - name: Deploy to production
      run: echo "Deploy to production environment"
      # Example for Vercel:
      # run: npx vercel --token ${{ secrets.VERCEL_TOKEN }} --prod

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Run security audit
      run: npm audit --audit-level high

    - name: Check for secrets in code
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified